(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{518:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("java01 基础语法")])]),t._v(" "),s("h2",{attrs:{id:"_1-教程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-教程"}},[t._v("#")]),t._v(" 1. 教程")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.javatpoint.com/java-tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("javatpoint 网页语法用例："),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.icourse163.org/learn/ZJU-1001541001?tid=1450243457#/learn/content",target:"_blank",rel:"noopener noreferrer"}},[t._v("mooc-wenkai"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-计算"}},[t._v("#")]),t._v(" 2. 计算")]),t._v(" "),s("p",[t._v("和 cpp 一摸一样的基本，接受一种新语法而已")]),t._v(" "),s("h3",{attrs:{id:"_2-1-变量与计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-变量与计算"}},[t._v("#")]),t._v(" 2.1. 变量与计算")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javademo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" javaDemo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"变量加法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n. [计] 扫描仪，扫描器，光电子扫描装置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" base "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" base "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//加号作为字符串连接符号")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("system.out 里面也有 cpp 的 printf，格式化输出的规则和 cpp 相同")]),t._v(" "),s("p",[t._v("final 关键字替换 const 关键字")]),t._v(" "),s("h3",{attrs:{id:"_2-2-浮点数计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-浮点数计算"}},[t._v("#")]),t._v(" 2.2. 浮点数计算")]),t._v(" "),s("p",[t._v("浮点数规则和 cpp 相同")]),t._v(" "),s("h2",{attrs:{id:"_3-判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-判断"}},[t._v("#")]),t._v(" 3. 判断")]),t._v(" "),s("h3",{attrs:{id:"_3-1-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-比较"}},[t._v("#")]),t._v(" 3.1. 比较")]),t._v(" "),s("p",[t._v("java 判定浮点数是否相等")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("一个较小的数）\n")])])]),s("h3",{attrs:{id:"_3-2-判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-判断"}},[t._v("#")]),t._v(" 3.2. 判断")]),t._v(" "),s("p",[t._v("if else 结构的各种使用和 cpp 完全相同")]),t._v(" "),s("h3",{attrs:{id:"_3-3-分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-分支"}},[t._v("#")]),t._v(" 3.3. 分支")]),t._v(" "),s("p",[t._v("switch case 结构的各种使用和 cpp 完全相同")]),t._v(" "),s("h2",{attrs:{id:"_4-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-循环"}},[t._v("#")]),t._v(" 4. 循环")]),t._v(" "),s("p",[t._v("while 也和 cpp 完全相同")]),t._v(" "),s("p",[t._v("不会在任意时刻判断条件是否满足")]),t._v(" "),s("p",[t._v("do while 循环和 while 循环的区别就是第一次循环是否进入")]),t._v(" "),s("p",[t._v("for == while")]),t._v(" "),s("p",[t._v("可以利用逗号在 for 循环的三个位置添加需要执行的多条语句")]),t._v(" "),s("h3",{attrs:{id:"break"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#break"}},[t._v("#")]),t._v(" break")]),t._v(" "),s("p",[t._v("在循环前面可以放置一个标号来标识循环"),s("br"),t._v("\n label:"),s("br"),t._v("\n 带标号的 break 和 continue 对那个循环起作用，而不是 break 当前处于的那个循环")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("blockquote",[s("p",[t._v("定义数组变量，创建数组")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" numbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("遍历数组和使用数组中元素的方式和 cpp 相同")]),t._v(" "),s("ul",[s("li",[t._v("元素个数必须是整数")]),t._v(" "),s("li",[t._v("元素个数必须给出")]),t._v(" "),s("li",[t._v("元素个数"),s("strong",[t._v("可以是变量")])])]),t._v(" "),s("p",[t._v("cpp 中写算法题要是用到可变数组就用 vector")]),t._v(" "),s("p",[t._v("java 数组中集成了部分函数 用点运算符可以直接使用")]),t._v(" "),s("blockquote",[s("p",[t._v("直接初始化数组")])]),t._v(" "),s("p",[t._v("new 创建的数组会得到默认的 0"),s("br"),t._v(" "),s("code",[t._v("int[] scores = {8,8,8,8,8,8,8,8,8,8,8,8};")])]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"20210307174123-2021-03-07","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_01/master/img/20210307174123-2021-03-07.png",loading:"lazy"}})]),t._v(" "),s("p",[t._v("相比于 cpp 数组，可以直接进行相互赋值的操作（地址赋值，不重新开辟空间）")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"20210307174716-2021-03-07","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_01/master/img/20210307174716-2021-03-07.png",loading:"lazy"}})]),t._v(" "),s("h3",{attrs:{id:"遍历数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组"}},[t._v("#")]),t._v(" 遍历数组")]),t._v(" "),s("p",[t._v("for each 循环")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"二维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二维数组"}},[t._v("#")]),t._v(" 二维数组")]),t._v(" "),s("p",[t._v("两个方括号进行初始化")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"逃逸字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逃逸字符"}},[t._v("#")]),t._v(" 逃逸字符")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"20210307184355-2021-03-07","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_01/master/img/20210307184355-2021-03-07.png",loading:"lazy"}})]),t._v(" "),s("h2",{attrs:{id:"包裹类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包裹类型"}},[t._v("#")]),t._v(" 包裹类型")]),t._v(" "),s("p",[s("code",[t._v("Character.isDigit();")])]),t._v(" "),s("p",[t._v("有很多帮助你做事情的子功能")]),t._v(" "),s("h2",{attrs:{id:"字符串变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串变量"}},[t._v("#")]),t._v(" 字符串变量")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"20210307185057-2021-03-07","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_01/master/img/20210307185057-2021-03-07.png",loading:"lazy"}})]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v("  用来做连接")]),t._v(" "),s("p",[t._v("如果一边不是字符串的话，就会将其他转换为字符串  "),s("code",[t._v('"S"+12+24="S1224"')])]),t._v(" "),s("p",[t._v("in.next 按照空格分隔读入的数据")]),t._v(" "),s("p",[t._v("判断字符串是否相等时，要用字符串 equals 这个函数 ，是一个东西和是否具有相同的内容是两种情况")]),t._v(" "),s("p",[s("code",[t._v("charAt(index)")]),t._v("  用来读取字符串的字符"),s("br"),t._v(" "),s("code",[t._v("indexOf('A')")]),t._v("  读取相应字符的下标")]),t._v(" "),s("p",[t._v("字符串不能用 for each 循环")]),t._v(" "),s("p",[s("code",[t._v("substring(2,4)")]),t._v("  左闭，右开")]),t._v(" "),s("p",[t._v("但是成员函数的使用都不会改变字符串变量本身")]),t._v(" "),s("h2",{attrs:{id:"math-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-类"}},[t._v("#")]),t._v(" Math 类")]),t._v(" "),s("p",[t._v("abs 绝对值"),s("br"),t._v("\n round 四舍五入"),s("br"),t._v("\n pow 次方"),s("br"),t._v("\n random () 随机数")]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"20210307194153-2021-03-07","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_01/master/img/20210307194153-2021-03-07.png",loading:"lazy"}})]),t._v(" "),s("p",[t._v("使用方式和 cpp 相同，都要有返回值等等"),s("br"),t._v("\n传参的方式也和 cpp 相同， "),s("code",[t._v("eg:swap")])]),t._v(" "),s("p",[t._v("在程序任意的一片空地上面凭空使用一个大括号也可以，当需要本地变量的时候")])])}),[],!1,null,null,null);a.default=r.exports}}]);